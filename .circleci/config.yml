version: 2.1

orbs:
  win: circleci/windows@2.2.0

jobs:
  build-arm64:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    steps:
      - checkout
      - restore_cache:
          name: Restore
          key: arm64-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
      - run:
          name: Install GHC
          command: |
            curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | BOOTSTRAP_HASKELL_NONINTERACTIVE=1 BOOTSTRAP_HASKELL_MINIMAL=1 sh

            PATH=$HOME/.ghcup/bin:$PATH

            ghcup install cabal 3.6.2.0
            ghcup set cabal 3.6.2.0

            ghcup install ghc 9.4.4
            ghcup set ghc 9.4.4

            sudo apt-get install libvulkan-dev

      - run:
          name: Update Dependencies
          command: cabal new-update
      - run:
          name: Build
          command: |
            cabal new-build vulkan-raw
            cabal new-build vk-mem-alloc
      - save_cache:
          name: Cache
          key: arm64-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
          paths:
            - "/root/.cabal"
            - "dist-newstyle"

  build-linux:
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    parameters:
      version:
        type: string
    steps:
      - checkout
      - restore_cache:
          name: Restore
          key: linux-<< parameters.version >>-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
      - run:
          name: Install GHC
          command: |
            sudo add-apt-repository ppa:hvr/ghc
            sudo apt install libvulkan-dev
            sudo apt-get install ghc-<< parameters.version >> cabal-install-3.4
            echo 'export PATH=/opt/ghc/bin:$PATH' >> $BASH_ENV

      - run:
          name: Update Dependencies
          command: cabal new-update
      - run:
          name: Build
          command: |
            cabal new-build vulkan-raw
            cabal new-build vk-mem-alloc
      - save_cache:
          name: Cache
          key: linux-<< parameters.version >>-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
          paths:
            - "/root/.cabal"
            - "dist-newstyle"

  build-macos:
    macos:
      xcode: 12.5.1
    resource_class: medium
    parameters:
      resolver:
        type: string
    steps:
      - checkout
      - restore_cache:
          name: Restore
          key: macos-<< parameters.resolver >>-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
      - run:
          name: Install Stack
          command: |
            brew install vulkan-headers molten-vk
            curl -sSL https://get.haskellstack.org/ | sh

      - run:
          name: Build
          command: |
            stack init --resolver << parameters.resolver >> --omit-packages
            echo -e 'packages:\n- vk-mem-alloc\n- vulkan-raw\n\nresolver: << parameters.resolver >>\n\nextra-deps:\n- storable-offset-0.1.0.0' > stack.yaml
            stack build vulkan-raw
            stack build vk-mem-alloc
      - save_cache:
          name: Cache
          key: macos-<< parameters.resolver >>-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
          paths:
            - "$HOME/.stack"
            - ".stack-work"

  build-windows:
    executor: win/default
    parameters:
      resolver:
        type: string
    steps:
      - checkout
      - restore_cache:
          name: Restore
          key: windows--<< parameters.resolver >>-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
      - run:
          name: Install Stack
          shell: bash.exe
          command: |
            choco install vulkan-sdk
            mkdir stack-build
            cd stack-build
            curl -LO --no-progress-meter https://get.haskellstack.org/stable/windows-x86_64.zip
            unzip windows-x86_64.zip
            mkdir -pv "$APPDATA/local/bin"
            mv -v stack.exe "$APPDATA/local/bin"
            cd ..
            echo 'export PATH=$APPDATA/local/bin:$PATH' >> $BASH_ENV

      - run:
          name: Build
          shell: bash.exe
          command: |
            stack init --resolver << parameters.resolver >> --omit-packages
            echo -e 'packages:\n- vk-mem-alloc\n- vulkan-raw\n\nresolver: << parameters.resolver >>\n\nextra-deps:\n- storable-offset-0.1.0.0' > stack.yaml
            stack build vulkan-raw
            stack build vk-mem-alloc
      - save_cache:
          name: Cache
          key: windows-<< parameters.resolver >>-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
          paths:
            - "$APPDATA/stack"
            - ".stack-work"



workflows:
  workflow:
    jobs:
      - build-arm64:
          name: aarch64-8.6.5
