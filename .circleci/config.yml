version: 2.1

orbs:
  win: circleci/windows@2.2.0

jobs:
  build-arm64:
    machine:
      image: ubuntu-2204:current
    resource_class: arm.medium
    steps:
      - checkout
      - restore_cache:
          name: Restore
          key: arm64-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
      - run:
          name: Install GHC
          command: |
            sudo apt-get update
            sudo NEEDRESTART_MODE=a apt-get install -y libgl-dev libvulkan-dev xorg-dev

            curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | BOOTSTRAP_HASKELL_NONINTERACTIVE=1 BOOTSTRAP_HASKELL_MINIMAL=1 sh

            PATH=$HOME/.ghcup/bin:$PATH

            ghcup install cabal 3.6.2.0
            ghcup set cabal 3.6.2.0

            ghcup install ghc 9.2.5
            ghcup set ghc 9.2.5

      - run:
          name: Update Dependencies
          command: |
            PATH=$HOME/.ghcup/bin:$PATH

            cabal new-update

      - run:
          name: Build
          command: |
            PATH=$HOME/.ghcup/bin:$PATH

            mkdir /tmp/out
            cd vulkan-example
            cabal new-install --install-method=copy --installdir=/tmp/out --enable-executable-stripping exe:vulkan-example

      - save_cache:
          name: Cache
          key: arm64-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
          paths:
            - "/root/.cabal"
            - "dist-newstyle"

      - store_artifacts:
          path: /tmp/out/vulkan-example

  build-linux:
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    parameters:
      version:
        type: string
      keep-artifact:
        type: boolean
    steps:
      - checkout
      - restore_cache:
          name: Restore
          key: linux-<< parameters.version >>-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
      - run:
          name: Install GHC
          command: |
            sudo apt-get update
            sudo NEEDRESTART_MODE=a apt-get install -y libgl-dev libvulkan-dev xorg-dev

            curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | BOOTSTRAP_HASKELL_NONINTERACTIVE=1 BOOTSTRAP_HASKELL_MINIMAL=1 sh

            PATH=$HOME/.ghcup/bin:$PATH

            ghcup install cabal 3.6.2.0
            ghcup set cabal 3.6.2.0

            ghcup install ghc << parameters.version >>
            ghcup set ghc << parameters.version >>

      - run:
          name: Update Dependencies
          command: |
            PATH=$HOME/.ghcup/bin:$PATH

            cabal new-update

      - run:
          name: Build
          command: |
            PATH=$HOME/.ghcup/bin:$PATH

            mkdir /tmp/out
            cd vulkan-example
            cabal new-install --install-method=copy --installdir=/tmp/out --enable-executable-stripping exe:vulkan-example

      - save_cache:
          name: Cache
          key: linux-<< parameters.version >>-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
          paths:
            - "/root/.cabal"
            - "dist-newstyle"

      - when:
          condition: << parameters.keep-artifact >>
          steps:
            - store_artifacts:
                path: /tmp/out/vulkan-example



  build-windows:
    executor: win/default
    steps:
      - checkout
      - restore_cache:
          name: Restore
          key: windows-9.2.5-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
      - run:
          name: Install GHC
          shell: bash.exe
          command: |
            choco install vulkan-sdk --version=1.2.182.0

            curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | BOOTSTRAP_HASKELL_NONINTERACTIVE=1 BOOTSTRAP_HASKELL_MINIMAL=1 sh

            ls /C/VulkanSDK

            ls /C/VulkanSDK/1.2.182.0

            PATH=/C/ghcup/bin:$PATH

            ghcup install cabal 3.6.2.0
            ghcup set cabal 3.6.2.0

            ghcup install ghc 9.2.5
            ghcup set ghc 9.2.5

            echo 'export PATH=/C/ghcup/bin:/C/VulkanSDK/1.2.182.0/Bin:$APPDATA/local/bin:$PATH' >> $BASH_ENV

      - run:
          name: Update Dependencies
          shell: bash.exe
          command: |
            cabal new-update

      - run:
          name: Build
          shell: bash.exe
          command: |
            mkdir $TEMP/out
            cd vulkan-example
            cabal new-install --extra-include-dirs="/C/VulkanSDK/1.2.182.0/Include" --install-method=copy --installdir="$TEMP/out" --enable-executable-stripping exe:vulkan-example

#     - save_cache:
#         name: Cache
#         key: windows-9.2.5-{{ checksum "vulkan-raw/vulkan-raw.cabal" }}
#         paths:
#           - "%APPDATA%\cabal"
#           - "dist-newstyle"

      - store_artifacts:
          path: $TEMP/out/vulkan-example.exe


workflows:
  workflow:
    jobs:
#     - build-arm64:
#         name: aarch64-9.2.5
#     - build-linux:
#         name: linux-8.4.4
#         version: 8.4.4
#         keep-artifact: false
#     - build-linux:
#         name: linux-8.6.5
#         version: 8.6.5
#         keep-artifact: false
#     - build-linux:
#         name: linux-8.8.4
#         version: 8.8.4
#         keep-artifact: false
#     - build-linux:
#         name: linux-8.10.7
#         version: 8.10.7
#         keep-artifact: false
#     - build-linux:
#         name: linux-9.0.2
#         version: 9.0.2
#         keep-artifact: false
#     - build-linux:
#         name: linux-9.2.5
#         version: 9.2.5
#         keep-artifact: true
      - build-windows:
          name: windows-9.2.5
